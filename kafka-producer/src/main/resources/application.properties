spring.profiles.active=local
server.port=9000

## Spring Boot Kafka Config ###
spring.kafka.template.default-topic=library-events
spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.acks=all
spring.kafka.producer.properties.retries=10
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.security.protocol=PLAINTEXT

## COnfig properties to create topic using KafkaAdmin configuration class ##
spring.kafka.topic=library-events
spring.kafka.admin.properties.bootstrap.servers=${spring.kafka.producer.bootstrap-servers}
#spring.kafka.producer.ssl.trust-store-location=file:/ssl/client.truststore.jks
#spring.kafka.producer.ssl.trust-store-password=password
#spring.kafka.producer.ssl.key-store-location=file:/ssl/client.keystore.jks
#spring.kafka.producer.ssl.key-store-password=password
#spring.kafka.producer.properties.ssl.endpoint.identification.algorithm=null

### Data Source ###
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5431/order-service
spring.datasource.username=technolearnorders
spring.datasource.password=technolearnpwd
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true



